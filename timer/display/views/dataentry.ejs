<!-- dataentry.ejs -->
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" type="text/css" href="/css/style.css">
    <title>Data Entry</title>
</head>
    <script>
        // Function to toggle dark mode
        function toggleTheme() {
            document.body.classList.toggle('dark-mode');
            localStorage.setItem('theme', document.body.classList.contains('dark-mode') ? 'dark' : 'light');
        }

        // Apply the saved theme on page load
        window.onload = () => {
            if (localStorage.getItem('theme') === 'dark') {
                document.body.classList.add('dark-mode');
            }
        };
    </script>
    <script>
        function searchTable() {
        // Declare variables
        var input, filter, table, tr, td, i, j, txtValue;
        input = document.getElementById("myInput");
        filter = input.value.toUpperCase();
        table = document.getElementById("editData");
        tr = table.getElementsByTagName("tr");

        // Loop through all table rows, and hide those who don't match the search query
        for (i = 1; i < tr.length; i++) { // Start at 1 to skip the header row
            tr[i].style.display = "none"; // Hide the row initially
            td = tr[i].getElementsByTagName("td");
            for (j = 0; j < td.length; j++) { // Loop through all cells in the row
            if (td[j]) {
                txtValue = td[j].textContent || td[j].innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                tr[i].style.display = ""; // Show the row if the query matches any cell
                break; // Stop searching through cells once a match is found
                }
            }
            }
        }
        }
    </script>
    <script>
        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("editData");
            switching = true;
            dir = "asc"; // Set the sorting direction to ascending initially
            // Remove the sorting class from all headers
            var headers = table.getElementsByTagName("TH");
            for (i = 0; i < headers.length; i++) {
                headers[i].classList.remove("sort-asc", "sort-desc");
            }
            
            while (switching) {
                switching = false;
                rows = table.getElementsByTagName("TR");
                
                // Loop through all table rows (except the first, which contains table headers)
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    
                    if (x && y) {
                        if (dir == "asc") {
                            if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                                shouldSwitch = true;
                                break;
                            }
                        } else if (dir == "desc") {
                            if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                                shouldSwitch = true;
                                break;
                            }
                        }
                    }
                }
                
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
            // Add the sorting class to the header that was clicked
            if (dir === "asc") {
                headers[n].classList.add("sort-asc");
            } else {
                headers[n].classList.add("sort-desc");
            }
        }
    </script>
<body>
    <div style="position: fixed; top: 0; right: 0; padding: 10px;">
        <button onclick="toggleTheme()">Toggle Dark/Light Mode</button>
    </div>
    <form action="/insert-demo-data" method="post">
        <table id="enterData">
            <tr>
                <th colspan="2">
                    <center><h2>Enter Demographic Data</h2></center>
                </th>
            </tr>
            <tr>
                <th><label for="fname">First Name:</label></th>
                <td><input type="text" id="fname" name="fname" required></td>
            </tr>
            <tr>
                <th><label for="lname">Last Name:</label></th>
                <td><input type="text" id="lname" name="lname" required></td>
            </tr>
            <tr>
                <th><label for="age">Age:</label></tH>
                <td><input type="number" id="age" name="age" required></td>
            </tr>
            <tr>
                <th><label for="gender">Gender:</label></tH>
                <td><input type="text" id="gender" name="gender" required></td>
            </tr>
            <tr>
                <th><label for="district">District:</label></td>
                <td><input type="text" id="district" name="district" required></td>
            </tr>
            <tr>
                <th><label for="team">Team:</label></td>
                <td><input type="text" id="team" name="team" required></td>
            </tr>
            <tr>
                <th><label for="bibnumber">Bib Number:</label></td>
                <td><input type="number" id="bibnumber" name="bibnumber" required></td>
            </tr>
            <tr class="submit-row">
                <td colspan="2"><input type="submit" value="Submit"></td>
            </tr>
        </table>
    </form>
    <table id="editData" border="1">
        <tr>
            <th colspan="8">
                <center><h2>Edit Demographic Data</h2></center>
            </th>
        </tr>
        <tr>
            <th colspan="8">
                <input type="text" id="myInput" onkeyup="searchTable()" placeholder="Search for names..">
            </th>
        </tr>
        <tr>
            <!-- Column headers -->
            <th onclick="sortTable(2)">First Name</th>
            <th onclick="sortTable(3)">Last Name</th>
            <th onclick="sortTable(4)">Age</th>
            <th onclick="sortTable(5)">Gender</th>
            <th onclick="sortTable(6)">District</th>
            <th onclick="sortTable(7)">Team</th>
            <th onclick="sortTable(8)">Bib Number</th>
            <th>Edit</th>
        </tr>
        <% demoData.forEach(function(row) { %>
            <tr>
                <td><%= row.fname %></td>
                <td><%= row.lname %></td>
                <td><%= row.age %></td>
                <td><%= row.gender %></td>
                <td><%= row.district %></td>
                <td><%= row.team %></td>
                <td><%= row.bibnumber %></td>
                <td><a href="/edit-demo-data?uid=<%= row.uid %>" class="edit-button">Edit</a></td>
            </tr>
        <% }); %>
    </table>
</body>
</html>